--DDL
bq mk -t ulta_work.SALON_SALES_HEADER_FACT SALON_SALES_HEADER_KEY:INTEGER,SALON_PERSONA_KEY:INTEGER,SALON_TRANSACTION_ID:INTEGER,SALON_TRANSACTION_DATE_KEY:INTEGER,SALON_TRANSACTION_DATE:TIMESTAMP,SALON_STORE_KEY:INTEGER,SALON_STORE_ID:STRING

bq mk -t ulta_work.SALON_SALES_HEADER_FACT_UNCHANGED SALON_SALES_HEADER_KEY:INTEGER,SALON_PERSONA_KEY:INTEGER,SALON_TRANSACTION_ID:INTEGER,SALON_TRANSACTION_DATE_KEY:INTEGER,SALON_TRANSACTION_DATE:TIMESTAMP,SALON_STORE_KEY:INTEGER,SALON_STORE_ID:STRING

bq mk -t ulta_work.SALON_SALES_HEADER_FACT_UPDATED SALON_SALES_HEADER_KEY:INTEGER,SALON_PERSONA_KEY:INTEGER,SALON_TRANSACTION_ID:INTEGER,SALON_TRANSACTION_DATE_KEY:INTEGER,SALON_TRANSACTION_DATE:TIMESTAMP,SALON_STORE_KEY:INTEGER,SALON_STORE_ID:STRING

bq mk -t ulta_mart.SALON_SALES_HEADER_FACT SALON_SALES_HEADER_KEY:INTEGER,SALON_PERSONA_KEY:INTEGER,SALON_TRANSACTION_ID:INTEGER,SALON_TRANSACTION_DATE_KEY:INTEGER,SALON_TRANSACTION_DATE:TIMESTAMP,SALON_STORE_KEY:INTEGER,SALON_STORE_ID:STRING

--1. Step to insert in to stage table
DELETE ulta_work.SALON_SALES_HEADER_FACT WHERE TRUE;

insert into ulta_work.SALON_SALES_HEADER_FACT (SALON_SALES_HEADER_KEY,SALON_PERSONA_KEY,SALON_TRANSACTION_ID,SALON_TRANSACTION_DATE_KEY,SALON_TRANSACTION_DATE,SALON_STORE_KEY,SALON_STORE_ID)
Select  
	NULL as SALON_SALES_HEADER_KEY,
	NULL as	SALON_PERSONA_KEY, -- CONCAT('CUSTOMER-SALON CUSTOMER-',IFNULL(CAST(CUSTOMER_ID as STRING),'')), keys to be added later
	SALON_TRAN_NUM	as	SALON_TRANSACTION_ID,
	NULL as	SALON_TRANSACTION_DATE_KEY, -- CONCAT('CALENDAR-DATE-',CAST((CAST(SUBSTR(CASE WHEN SALON_TRAN_DATE = '' THEN NULL ELSE SALON_TRAN_DATE END,1,10) as DATE)) as STRING)) , keys to be added later
	CAST(SUBSTR((CASE WHEN SALON_TRAN_DATE = '' THEN NULL ELSE SALON_TRAN_DATE END), 1,19) as TIMESTAMP) as	SALON_TRANSACTION_DATE,
	NULL as	SALON_STORE_KEY, -- CONCAT('LOCATION-STORE-',IFNULL(SALON_STORE_NUM,'')), keys to be added later
	SALON_STORE_NUM as SALON_STORE_ID	 -- Derived attribute , multiple sources-> discussed with chetan
FROM (SELECT SALON_TRAN_NUM,SALON_STORE_NUM,CUSTOMER_ID, SALON_TRAN_DATE FROM ulta_incoming.SALONSALEDETAIL GROUP BY SALON_TRAN_NUM,SALON_STORE_NUM,CUSTOMER_ID, SALON_TRAN_DATE ) SALONSALEDETAIL


--2. populate unchanged stage table
DELETE ulta_work.SALON_SALES_HEADER_FACT_UNCHANGED WHERE TRUE;

insert into ulta_work.SALON_SALES_HEADER_FACT_UNCHANGED (SALON_SALES_HEADER_KEY,SALON_PERSONA_KEY,SALON_TRANSACTION_ID,SALON_TRANSACTION_DATE_KEY,SALON_TRANSACTION_DATE,SALON_STORE_KEY,SALON_STORE_ID)
SELECT mart.SALON_SALES_HEADER_KEY,mart.SALON_PERSONA_KEY,mart.SALON_TRANSACTION_ID,mart.SALON_TRANSACTION_DATE_KEY,mart.SALON_TRANSACTION_DATE,mart.SALON_STORE_KEY,mart.SALON_STORE_ID
FROM ulta_mart.SALON_SALES_HEADER_FACT mart LEFT OUTER JOIN ulta_work.SALON_SALES_HEADER_FACT stage 
ON mart.SALON_TRANSACTION_ID = stage.SALON_TRANSACTION_ID 
where stage.SALON_TRANSACTION_ID is null;

--2. populate updated stage table

DELETE ulta_work.SALON_SALES_HEADER_FACT_UPDATED WHERE TRUE;

insert into ulta_work.SALON_SALES_HEADER_FACT_UPDATED (SALON_SALES_HEADER_KEY,SALON_PERSONA_KEY,SALON_TRANSACTION_ID,SALON_TRANSACTION_DATE_KEY,SALON_TRANSACTION_DATE,SALON_STORE_KEY,SALON_STORE_ID)
SELECT mart.SALON_SALES_HEADER_KEY,stage.SALON_PERSONA_KEY,stage.SALON_TRANSACTION_ID,stage.SALON_TRANSACTION_DATE_KEY,stage.SALON_TRANSACTION_DATE,stage.SALON_STORE_KEY,stage.SALON_STORE_ID
FROM ulta_mart.SALON_SALES_HEADER_FACT mart INNER JOIN ulta_work.SALON_SALES_HEADER_FACT stage 
ON mart.SALON_TRANSACTION_ID = stage.SALON_TRANSACTION_ID;


--3. delete data from mart and take back up
bq cp ulta_mart.SALON_SALES_HEADER_FACT ulta_mart.SALON_SALES_HEADER_FACT_20180802
DELETE ulta_mart.SALON_SALES_HEADER_FACT WHERE TRUE;

--4. Populate mart table 

insert into ulta_mart.SALON_SALES_HEADER_FACT (SALON_SALES_HEADER_KEY,SALON_PERSONA_KEY,SALON_TRANSACTION_ID,SALON_TRANSACTION_DATE_KEY,SALON_TRANSACTION_DATE,SALON_STORE_KEY,SALON_STORE_ID)
SELECT NULL as SALON_SALES_HEADER_KEY,stage.SALON_PERSONA_KEY,stage.SALON_TRANSACTION_ID,stage.SALON_TRANSACTION_DATE_KEY,stage.SALON_TRANSACTION_DATE,stage.SALON_STORE_KEY,stage.SALON_STORE_ID
FROM ulta_work.SALON_SALES_HEADER_FACT stage
left join ulta_work.SALON_SALES_HEADER_FACT_UPDATED updated
on stage.SALON_TRANSACTION_ID = updated.SALON_TRANSACTION_ID
where updated.SALON_TRANSACTION_ID is null
UNION ALL
SELECT SALON_SALES_HEADER_KEY,SALON_PERSONA_KEY,SALON_TRANSACTION_ID,SALON_TRANSACTION_DATE_KEY,SALON_TRANSACTION_DATE,SALON_STORE_KEY,SALON_STORE_ID
FROM ulta_work.SALON_SALES_HEADER_FACT_UNCHANGED
UNION ALL
select SALON_SALES_HEADER_KEY,SALON_PERSONA_KEY,SALON_TRANSACTION_ID,SALON_TRANSACTION_DATE_KEY,SALON_TRANSACTION_DATE,SALON_STORE_KEY,SALON_STORE_ID
FROM ulta_work.SALON_SALES_HEADER_FACT_UPDATED;
