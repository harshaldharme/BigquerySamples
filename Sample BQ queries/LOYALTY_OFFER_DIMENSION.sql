--DDL

bq mk -t ulta_work.LOYALTY_OFFER_DIMENSION LOYALTY_OFFER_KEY:INTEGER,OFFER_ID:INTEGER,OFFER_MASTER_ID:STRING,OFFER_START:DATE,OFFER_END:DATE,IS_MULTI_USE:BOOLEAN,OFFER_CLASSIFICATION:STRING

bq mk -t ulta_work.LOYALTY_OFFER_DIMENSION_UNCHANGED LOYALTY_OFFER_KEY:INTEGER,OFFER_ID:INTEGER,OFFER_MASTER_ID:STRING,OFFER_START:DATE,OFFER_END:DATE,IS_MULTI_USE:BOOLEAN,OFFER_CLASSIFICATION:STRING

--create table
bq mk -t ulta_mart.LOYALTY_OFFER_DIMENSION LOYALTY_OFFER_KEY:INTEGER,OFFER_ID:INTEGER,OFFER_MASTER_ID:STRING,OFFER_START:DATE,OFFER_END:DATE,IS_MULTI_USE:BOOLEAN,OFFER_CLASSIFICATION:STRING

bq mk -t ulta_work.LOYALTY_OFFER_DIMENSION_UPDATED LOYALTY_OFFER_KEY:INTEGER,OFFER_ID:INTEGER,OFFER_MASTER_ID:STRING,OFFER_START:DATE,OFFER_END:DATE,IS_MULTI_USE:BOOLEAN,OFFER_CLASSIFICATION:STRING

bq mk -t ulta_work.LOYALTY_OFFER_DIMENSION_LOYALTY_OFFER_KEY MAX_KEY:INTEGER

--1. Step to insert in to stage table
DELETE ulta_work.LOYALTY_OFFER_DIMENSION WHERE TRUE;

INSERT INTO ulta_work.LOYALTY_OFFER_DIMENSION (LOYALTY_OFFER_KEY, OFFER_ID, OFFER_MASTER_ID, OFFER_START, OFFER_END, IS_MULTI_USE, OFFER_CLASSIFICATION)
SELECT
DISTINCT NULL AS LOYALTY_OFFER_KEY, --will be populated from keys
OFFER_ID AS OFFER_ID,
LOYCAMPDATA.OFFER_MASTER_ID AS OFFER_MASTER_ID,
CAST(SUBSTR((CASE WHEN LOYCAMPDATA.OFFER_START_DATE = '' THEN NULL ELSE LOYCAMPDATA.OFFER_START_DATE END),1,10) AS DATE) AS OFFER_START,
CAST(SUBSTR((CASE WHEN LOYCAMPDATA.OFFER_END_DATE = '' THEN NULL ELSE LOYCAMPDATA.OFFER_END_DATE END),1,10) AS DATE) AS OFFER_END,
CASE WHEN LOYCAMPDATA.IS_MULTI_USE = '0' THEN FALSE ELSE TRUE END AS IS_MULTI_USE,
LOYCAMPDATA.OFFER_CLASSIFICATION AS OFFER_CLASSIFICATION
FROM 
ulta_incoming.LOYALTYCAMPAIGNDATA LOYCAMPDATA;

--2. populate unchanged stage table
DELETE ulta_work.LOYALTY_OFFER_DIMENSION_UNCHANGED WHERE TRUE;

INSERT INTO ulta_work.LOYALTY_OFFER_DIMENSION_UNCHANGED (LOYALTY_OFFER_KEY, OFFER_ID, OFFER_MASTER_ID, OFFER_START, OFFER_END, IS_MULTI_USE, OFFER_CLASSIFICATION)
SELECT mart.LOYALTY_OFFER_KEY, mart.OFFER_ID, mart.OFFER_MASTER_ID, mart.OFFER_START, mart.OFFER_END, mart.IS_MULTI_USE, mart.OFFER_CLASSIFICATION
from ulta_mart.LOYALTY_OFFER_DIMENSION mart LEFT OUTER JOIN ulta_work.LOYALTY_OFFER_DIMENSION stage 
ON mart.OFFER_ID = stage.OFFER_ID
WHERE stage.OFFER_ID IS NULL;

-- populate updated stage table

DELETE ulta_work.LOYALTY_OFFER_DIMENSION_UPDATED WHERE TRUE;

INSERT INTO ulta_work.LOYALTY_OFFER_DIMENSION_UPDATED (LOYALTY_OFFER_KEY, OFFER_ID, OFFER_MASTER_ID, OFFER_START, OFFER_END, IS_MULTI_USE, OFFER_CLASSIFICATION)
SELECT mart.LOYALTY_OFFER_KEY, stage.OFFER_ID, stage.OFFER_MASTER_ID, stage.OFFER_START, stage.OFFER_END, stage.IS_MULTI_USE, stage.OFFER_CLASSIFICATION
from ulta_mart.LOYALTY_OFFER_DIMENSION mart INNER JOIN ulta_work.LOYALTY_OFFER_DIMENSION stage 
ON mart.OFFER_ID = stage.OFFER_ID;

--3. delete data from mart 
bq cp ulta_mart.LOYALTY_OFFER_DIMENSION ulta_mart.LOYALTY_OFFER_DIMENSION_20180728
DELETE ulta_mart.LOYALTY_OFFER_DIMENSION WHERE TRUE;


--4. Populate mart table
INSERT INTO ulta_mart.LOYALTY_OFFER_DIMENSION(LOYALTY_OFFER_KEY, OFFER_ID, OFFER_MASTER_ID, OFFER_START, OFFER_END, IS_MULTI_USE, OFFER_CLASSIFICATION)
SELECT stage.LOYALTY_OFFER_KEY, stage.OFFER_ID, stage.OFFER_MASTER_ID, stage.OFFER_START, stage.OFFER_END, stage.IS_MULTI_USE, stage.OFFER_CLASSIFICATION
FROM ulta_work.LOYALTY_OFFER_DIMENSION stage
left join 
ulta_work.LOYALTY_OFFER_DIMENSION_UPDATED updated
on 
stage.OFFER_ID = updated.OFFER_ID
where updated.OFFER_ID is null
UNION ALL
SELECT LOYALTY_OFFER_KEY, OFFER_ID, OFFER_MASTER_ID, OFFER_START, OFFER_END, IS_MULTI_USE, OFFER_CLASSIFICATION
FROM ulta_work.LOYALTY_OFFER_DIMENSION_UPDATED
UNION ALL
SELECT LOYALTY_OFFER_KEY, OFFER_ID, OFFER_MASTER_ID, OFFER_START, OFFER_END, IS_MULTI_USE, OFFER_CLASSIFICATION
FROM ulta_work.LOYALTY_OFFER_DIMENSION_UNCHANGED;