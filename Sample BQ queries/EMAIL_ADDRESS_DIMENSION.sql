--DDL
bq mk -t ulta_work.EMAIL_ADDRESS_DIMENSION \
EMAIL_TOUCHPOINT_KEY:INTEGER,EMAIL_ADDRESS_ID:INTEGER,TYPE:STRING,EMAIL:STRING,AQUISITION_DATE:DATE,SOURCE:INTEGER,LAST_OPEN_DATE:TIMESTAMP,LAST_CLICK_DATE:TIMESTAMP,RECENCY_DATE:TIMESTAMP,EVENT_EMAIL_DATE:TIMESTAMP,EVENT_EMAIL_SOURCE:STRING,OPT_IN:STRING,PROMOTION_OPT_IN:STRING,INDIVIDUAL_KEY:INTEGER

bq mk -t ulta_work.EMAIL_ADDRESS_DIMENSION_UNCHANGED \
EMAIL_TOUCHPOINT_KEY:INTEGER,EMAIL_ADDRESS_ID:INTEGER,TYPE:STRING,EMAIL:STRING,AQUISITION_DATE:DATE,SOURCE:INTEGER,LAST_OPEN_DATE:TIMESTAMP,LAST_CLICK_DATE:TIMESTAMP,RECENCY_DATE:TIMESTAMP,EVENT_EMAIL_DATE:TIMESTAMP,EVENT_EMAIL_SOURCE:STRING,OPT_IN:STRING,PROMOTION_OPT_IN:STRING,INDIVIDUAL_KEY:INTEGER


bq mk -t ulta_mart.EMAIL_ADDRESS_DIMENSION \
EMAIL_TOUCHPOINT_KEY:INTEGER,EMAIL_ADDRESS_ID:INTEGER,TYPE:STRING,EMAIL:STRING,AQUISITION_DATE:DATE,SOURCE:INTEGER,LAST_OPEN_DATE:TIMESTAMP,LAST_CLICK_DATE:TIMESTAMP,RECENCY_DATE:TIMESTAMP,EVENT_EMAIL_DATE:TIMESTAMP,EVENT_EMAIL_SOURCE:STRING,OPT_IN:STRING,PROMOTION_OPT_IN:STRING,INDIVIDUAL_KEY:INTEGER

bq mk -t ulta_work.EMAIL_ADDRESS_DIMENSION_UPDATED \
EMAIL_TOUCHPOINT_KEY:INTEGER,EMAIL_ADDRESS_ID:INTEGER,TYPE:STRING,EMAIL:STRING,AQUISITION_DATE:DATE,SOURCE:INTEGER,LAST_OPEN_DATE:TIMESTAMP,LAST_CLICK_DATE:TIMESTAMP,RECENCY_DATE:TIMESTAMP,EVENT_EMAIL_DATE:TIMESTAMP,EVENT_EMAIL_SOURCE:STRING,OPT_IN:STRING,PROMOTION_OPT_IN:STRING,INDIVIDUAL_KEY:INTEGER

--1. Step to insert in to stage table
DELETE ulta_work.EMAIL_ADDRESS_DIMENSION WHERE TRUE;


INSERT INTO ulta_work.EMAIL_ADDRESS_DIMENSION (EMAIL_TOUCHPOINT_KEY,EMAIL_ADDRESS_ID,TYPE,EMAIL,AQUISITION_DATE,SOURCE,LAST_OPEN_DATE,LAST_CLICK_DATE,RECENCY_DATE,EVENT_EMAIL_DATE,EVENT_EMAIL_SOURCE,OPT_IN,PROMOTION_OPT_IN,
INDIVIDUAL_KEY)
SELECT NULL as EMAIL_TOUCHPOINT_KEY,
CAST(EMAIL_ID AS INT64) as EMAIL_ADDRESS_ID,  --Populating from multiple sources
CAST(CASE WHEN E.ITYPE = 1 THEN 'Primary' WHEN E.ITYPE = 0 THEN 'Other' ELSE '' END AS STRING) as TYPE,
E.EMAIL_ADDRESS as EMAIL, --Populating from multiple sources
CAST(SUBSTR((CASE when (E.ACQUISITION_DATE='') then NULL else E.ACQUISITION_DATE end),1,10) as DATE) as AQUISITION_DATE,
E.SOURCE as SOURCE,
CAST(SUBSTR((CASE when(E.LAST_OPEN='') then NULL else E.LAST_OPEN end),1,19) as TIMESTAMP) as LAST_OPEN_DATE,
CAST(SUBSTR((CASE when(E.LAST_CLICK='') then NULL else E.LAST_CLICK end),1,19) as TIMESTAMP) as LAST_CLICK_DATE,
CAST(SUBSTR((CASE when(E.RECENCY_DATE='') then NULL else E.RECENCY_DATE end),1,19) as TIMESTAMP) as RECENCY_DATE,
CAST(SUBSTR((CASE when(E.EVENT_EMAIL_DATE='') then NULL else E.EVENT_EMAIL_DATE end),1,19) as TIMESTAMP) as EVENT_EMAIL_DATE,
E.EVENT_EMAIL_SOURCE as EVENT_EMAIL_SOURCE,
E.EMAIL_OPT_IN as OPT_IN,
E.ULTA_PROMOTIONS_OPT_IN as PROMOTION_OPT_IN,
NULL as INDIVIDUAL_KEY
FROM ulta_incoming.EMAILADDRESSES E;


--2. populate unchanged stage table
DELETE ulta_work.EMAIL_ADDRESS_DIMENSION_UNCHANGED WHERE TRUE;

INSERT INTO ulta_work.EMAIL_ADDRESS_DIMENSION_UNCHANGED (EMAIL_TOUCHPOINT_KEY,EMAIL_ADDRESS_ID,TYPE,EMAIL,AQUISITION_DATE,SOURCE,LAST_OPEN_DATE,LAST_CLICK_DATE,RECENCY_DATE,EVENT_EMAIL_DATE,EVENT_EMAIL_SOURCE,OPT_IN,PROMOTION_OPT_IN,INDIVIDUAL_KEY )
select mart.EMAIL_TOUCHPOINT_KEY,mart.EMAIL_ADDRESS_ID,mart.TYPE,mart.EMAIL,mart.AQUISITION_DATE,mart.SOURCE,mart.LAST_OPEN_DATE,mart.LAST_CLICK_DATE,mart.RECENCY_DATE,mart.EVENT_EMAIL_DATE,mart.EVENT_EMAIL_SOURCE,mart.OPT_IN,mart.PROMOTION_OPT_IN,mart.INDIVIDUAL_KEY
FROM ulta_mart.EMAIL_ADDRESS_DIMENSION mart LEFT OUTER JOIN ulta_work.EMAIL_ADDRESS_DIMENSION stage 
ON mart.EMAIL_ADDRESS_ID = stage.EMAIL_ADDRESS_ID
where stage.EMAIL_ADDRESS_ID is null and mart.EMAIL_ADDRESS_ID IS NOT NULL;

-- populate updated stage table
DELETE ulta_work.EMAIL_ADDRESS_DIMENSION_UPDATED WHERE TRUE;

INSERT INTO ulta_work.EMAIL_ADDRESS_DIMENSION_UPDATED (EMAIL_TOUCHPOINT_KEY,EMAIL_ADDRESS_ID,TYPE,EMAIL,AQUISITION_DATE,SOURCE,LAST_OPEN_DATE,LAST_CLICK_DATE,RECENCY_DATE,EVENT_EMAIL_DATE,EVENT_EMAIL_SOURCE,OPT_IN,PROMOTION_OPT_IN,INDIVIDUAL_KEY )
select mart.EMAIL_TOUCHPOINT_KEY,stage.EMAIL_ADDRESS_ID,stage.TYPE,stage.EMAIL,stage.AQUISITION_DATE,stage.SOURCE,stage.LAST_OPEN_DATE,stage.LAST_CLICK_DATE,stage.RECENCY_DATE,stage.EVENT_EMAIL_DATE,stage.EVENT_EMAIL_SOURCE,stage.OPT_IN,stage.PROMOTION_OPT_IN,stage.INDIVIDUAL_KEY
FROM ulta_mart.EMAIL_ADDRESS_DIMENSION mart inner join ulta_work.EMAIL_ADDRESS_DIMENSION stage 
ON mart.EMAIL_ADDRESS_ID = stage.EMAIL_ADDRESS_ID and mart.EMAIL_ADDRESS_ID IS NOT NULL;

--3. delete data from mart and take back up
bq cp ulta_mart.EMAIL_ADDRESS_DIMENSION ulta_mart.EMAIL_ADDRESS_DIMENSION_20180726
DELETE ulta_mart.EMAIL_ADDRESS_DIMENSION WHERE TRUE;


--4. Populate mart table 

INSERT INTO ulta_mart.EMAIL_ADDRESS_DIMENSION(EMAIL_TOUCHPOINT_KEY,EMAIL_ADDRESS_ID,TYPE,EMAIL,AQUISITION_DATE,SOURCE,LAST_OPEN_DATE,LAST_CLICK_DATE,RECENCY_DATE,EVENT_EMAIL_DATE,EVENT_EMAIL_SOURCE,OPT_IN,PROMOTION_OPT_IN,INDIVIDUAL_KEY) 
SELECT stage.EMAIL_TOUCHPOINT_KEY,stage.EMAIL_ADDRESS_ID,stage.TYPE,stage.EMAIL,stage.AQUISITION_DATE,stage.SOURCE,stage.LAST_OPEN_DATE,stage.LAST_CLICK_DATE,stage.RECENCY_DATE,stage.EVENT_EMAIL_DATE,stage.EVENT_EMAIL_SOURCE,stage.OPT_IN,stage.PROMOTION_OPT_IN,stage.INDIVIDUAL_KEY 
from ulta_work.EMAIL_ADDRESS_DIMENSION stage
left join ulta_work.EMAIL_ADDRESS_DIMENSION_UPDATED updated
on stage.EMAIL_ADDRESS_ID = updated.EMAIL_ADDRESS_ID
where updated.EMAIL_ADDRESS_ID is null and stage.EMAIL_ADDRESS_ID IS NOT NULL
UNION ALL 
SELECT EMAIL_TOUCHPOINT_KEY,EMAIL_ADDRESS_ID,TYPE,EMAIL,AQUISITION_DATE,SOURCE,LAST_OPEN_DATE,LAST_CLICK_DATE,RECENCY_DATE,EVENT_EMAIL_DATE,EVENT_EMAIL_SOURCE,OPT_IN,PROMOTION_OPT_IN,INDIVIDUAL_KEY 
from ulta_work.EMAIL_ADDRESS_DIMENSION_UNCHANGED
UNION ALL
SELECT EMAIL_TOUCHPOINT_KEY,EMAIL_ADDRESS_ID,TYPE,EMAIL,AQUISITION_DATE,SOURCE,LAST_OPEN_DATE,LAST_CLICK_DATE,RECENCY_DATE,EVENT_EMAIL_DATE,EVENT_EMAIL_SOURCE,OPT_IN,PROMOTION_OPT_IN,INDIVIDUAL_KEY 
from ulta_work.EMAIL_ADDRESS_DIMENSION_UPDATED;
