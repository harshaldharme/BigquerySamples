--DDL
bq mk -t ulta_base_sales.SALE_RETURN_FACT TRANSACTION_ID:STRING,TRANSACTION_DATE_KEY:INTEGER,ITEM_KEY:INTEGER,SUBCLASS_KEY:INTEGER,STORE_KEY:INTEGER,STORE_ID:STRING,TRANSACTION_DATETIME:TIMESTAMP,INDIVIDUAL_KEY:INTEGER,INDIVIDUAL_ID:STRING,POSTAL_ADDRESS_KEY:INTEGER,INBOUND_CHANNEL_KEY:INTEGER,SALES_QUANTITY:INTEGER,GROSS_SALES_AMOUNT:FLOAT,ITEM_PRICE_MODIFICATION_AMOUNT:FLOAT,NET_SALES_AMOUNT:FLOAT,SALES_HEADER_KEY:INTEGER,MARKETING_DISCOUNT:FLOAT,MERCHANDISING_DISCOUNT:FLOAT,MISCELLANEOUS_CHARGES:FLOAT,WEB_DISCOUNTS:FLOAT,WEB_SHIPPING:FLOAT,VENDOR_BILLBACK:FLOAT,UNIT_COND_COST:FLOAT,TAX_AMOUNT:FLOAT,UNIT_PRICE_AMOUNT:FLOAT,TRANSACTION_PRICE_MODIFICATION_AMOUNT:FLOAT,COST_OF_GOODS_SOLD_AMOUNT:FLOAT,GROSS_MARGIN_AMOUNT:FLOAT,EXTENDED_DISCOUNT_AMOUNT:FLOAT,SALES_DETAIL_KEY:INTEGER,SKU_NUMBER:STRING,TRANSACTION_NUMBER:INTEGER,REGISTER_ID:INTEGER,ORDER_DATE:DATE,ORDER_DATE_KEY:INTEGER,CREDITCARD_DISCOUNT:FLOAT,EMPLOYEE_DISCOUNT:FLOAT,MEMBER_FLAG:INTEGER,ORDER_NUM:STRING,GIFT_CARD_FLAG:INTEGER

bq mk -t ulta_base_sales.SALE_RETURN_FACT_UNCHANGED TRANSACTION_ID:STRING,TRANSACTION_DATE_KEY:INTEGER,ITEM_KEY:INTEGER,SUBCLASS_KEY:INTEGER,STORE_KEY:INTEGER,STORE_ID:STRING,TRANSACTION_DATETIME:TIMESTAMP,INDIVIDUAL_KEY:INTEGER,INDIVIDUAL_ID:STRING,POSTAL_ADDRESS_KEY:INTEGER,INBOUND_CHANNEL_KEY:INTEGER,SALES_QUANTITY:INTEGER,GROSS_SALES_AMOUNT:FLOAT,ITEM_PRICE_MODIFICATION_AMOUNT:FLOAT,NET_SALES_AMOUNT:FLOAT,SALES_HEADER_KEY:INTEGER,MARKETING_DISCOUNT:FLOAT,MERCHANDISING_DISCOUNT:FLOAT,MISCELLANEOUS_CHARGES:FLOAT,WEB_DISCOUNTS:FLOAT,WEB_SHIPPING:FLOAT,VENDOR_BILLBACK:FLOAT,UNIT_COND_COST:FLOAT,TAX_AMOUNT:FLOAT,UNIT_PRICE_AMOUNT:FLOAT,TRANSACTION_PRICE_MODIFICATION_AMOUNT:FLOAT,COST_OF_GOODS_SOLD_AMOUNT:FLOAT,GROSS_MARGIN_AMOUNT:FLOAT,EXTENDED_DISCOUNT_AMOUNT:FLOAT,SALES_DETAIL_KEY:INTEGER,SKU_NUMBER:STRING,TRANSACTION_NUMBER:INTEGER,REGISTER_ID:INTEGER,ORDER_DATE:DATE,ORDER_DATE_KEY:INTEGER,CREDITCARD_DISCOUNT:FLOAT,EMPLOYEE_DISCOUNT:FLOAT,MEMBER_FLAG:INTEGER,ORDER_NUM:STRING,GIFT_CARD_FLAG:INTEGER

bq mk -t ulta_mart_sales.SALE_RETURN_FACT TRANSACTION_ID:STRING,TRANSACTION_DATE_KEY:INTEGER,ITEM_KEY:INTEGER,SUBCLASS_KEY:INTEGER,STORE_KEY:INTEGER,STORE_ID:STRING,TRANSACTION_DATETIME:TIMESTAMP,INDIVIDUAL_KEY:INTEGER,INDIVIDUAL_ID:STRING,POSTAL_ADDRESS_KEY:INTEGER,INBOUND_CHANNEL_KEY:INTEGER,SALES_QUANTITY:INTEGER,GROSS_SALES_AMOUNT:FLOAT,ITEM_PRICE_MODIFICATION_AMOUNT:FLOAT,NET_SALES_AMOUNT:FLOAT,SALES_HEADER_KEY:INTEGER,MARKETING_DISCOUNT:FLOAT,MERCHANDISING_DISCOUNT:FLOAT,MISCELLANEOUS_CHARGES:FLOAT,WEB_DISCOUNTS:FLOAT,WEB_SHIPPING:FLOAT,VENDOR_BILLBACK:FLOAT,UNIT_COND_COST:FLOAT,TAX_AMOUNT:FLOAT,UNIT_PRICE_AMOUNT:FLOAT,TRANSACTION_PRICE_MODIFICATION_AMOUNT:FLOAT,COST_OF_GOODS_SOLD_AMOUNT:FLOAT,GROSS_MARGIN_AMOUNT:FLOAT,EXTENDED_DISCOUNT_AMOUNT:FLOAT,SALES_DETAIL_KEY:INTEGER,SKU_NUMBER:STRING,TRANSACTION_NUMBER:INTEGER,REGISTER_ID:INTEGER,ORDER_DATE:DATE,ORDER_DATE_KEY:INTEGER,CREDITCARD_DISCOUNT:FLOAT,EMPLOYEE_DISCOUNT:FLOAT,MEMBER_FLAG:INTEGER,ORDER_NUM:STRING,GIFT_CARD_FLAG:INTEGER

--1. Step to insert in to stage table
DELETE ulta_base_sales.SALE_RETURN_FACT WHERE TRUE

insert into ulta_base_sales.SALE_RETURN_FACT (TRANSACTION_ID,TRANSACTION_DATE_KEY,ITEM_KEY,SUBCLASS_KEY,STORE_KEY,STORE_ID,TRANSACTION_DATETIME,INDIVIDUAL_KEY,INDIVIDUAL_ID,POSTAL_ADDRESS_KEY,INBOUND_CHANNEL_KEY,SALES_QUANTITY,GROSS_SALES_AMOUNT,ITEM_PRICE_MODIFICATION_AMOUNT,NET_SALES_AMOUNT,SALES_HEADER_KEY,MARKETING_DISCOUNT,MERCHANDISING_DISCOUNT,MISCELLANEOUS_CHARGES,WEB_DISCOUNTS,WEB_SHIPPING,VENDOR_BILLBACK,UNIT_COND_COST,TAX_AMOUNT,UNIT_PRICE_AMOUNT,TRANSACTION_PRICE_MODIFICATION_AMOUNT,COST_OF_GOODS_SOLD_AMOUNT,GROSS_MARGIN_AMOUNT,EXTENDED_DISCOUNT_AMOUNT,SALES_DETAIL_KEY,SKU_NUMBER,TRANSACTION_NUMBER,REGISTER_ID,ORDER_DATE,ORDER_DATE_KEY,CREDITCARD_DISCOUNT,EMPLOYEE_DISCOUNT,MEMBER_FLAG,ORDER_NUM,GIFT_CARD_FLAG)
SELECT 
	CAST(SALE_ID as STRING) as TRANSACTION_ID,
	--CONCAT('CALENDAR-DATE-',CAST(CAST(SUBSTR(CASE WHEN TRANSACTION_DATE = '' THEN NULL ELSE TRANSACTION_DATE END,1,10) as DATE) as STRING )) as TRANSACTION_DATE_KEY,
    NULL AS TRANSACTION_DATE_KEY, --will come from dimension 
	--CONCAT('OFFERING-ITEM-',IFNULL(ITEM_NUMBER_SKU,'')) as ITEM_KEY,
	cast(ITEM_NUMBER_SKU as int64) as ITEM_KEY, -- Temporarily added since ITEM_DIMENSION not yet implemented.
    --NULL as ITEM_KEY,
	NULL as SUBCLASS_KEY, --This will be fetched from item dimension using ITEM_NUMBER_SKU and take subclass key
	--CONCAT('LOCATION-STORE-',IFNULL(STORE_NUMBER,'')) as STORE_KEY,
    NULL AS STORE_KEY, -- will be populated from dimension keys
	STORE_NUMBER as STORE_ID, -- based on data analysis
	CAST(SUBSTR(CASE WHEN TRANSACTION_DATE = '' THEN NULL ELSE TRANSACTION_DATE END,1,19) as TIMESTAMP) as TRANSACTION_DATETIME ,
	NULL as INDIVIDUAL_KEY, -- might be from Keys
	NULL as INDIVIDUAL_ID, -- not able to link
	NULL as POSTAL_ADDRESS_KEY, -- take individual id/key from sales return fact and go to postal address dimension based on individual key and pull postal address id
    NULL as INBOUND_CHANNEL_KEY, --out of scope
	ITEM_QTY as SALES_QUANTITY,
	ITEM_SOLD_PRICE_BEFORE_DISCOUNTS as GROSS_SALES_AMOUNT,	--Subquery have sum of source column
	CAST((MARKETING_DISCOUNT+MERCHANDISING_DISCOUNT-IFNULL(CREDITCARD_DISCOUNT,0)-IFNULL(EMPLOYEE_DISCOUNT,0)-WEB_DISCOUNTS) as FLOAT64) as ITEM_PRICE_MODIFICATION_AMOUNT,		
	CAST((MARKETING_DISCOUNT+MERCHANDISING_DISCOUNT-WEB_DISCOUNTS+ITEM_SOLD_PRICE_BEFORE_DISCOUNTS+WEB_SHIPPING+WEB_MISCELLANEOUS_CHARGES+
	IFNULL(CREDITCARD_DISCOUNT,0)+IFNULL(EMPLOYEE_DISCOUNT,0)) as FLOAT64) as NET_SALES_AMOUNT,	
	--CONCAT('SALES INTERACTIONS-SALES HEADER-',IFNULL(cast(SALE_ID as string),'')) as SALES_HEADER_KEY,
    NULL as SALES_HEADER_KEY,
	MARKETING_DISCOUNT AS MARKETING_DISCOUNT,
	MERCHANDISING_DISCOUNT AS MERCHANDISING_DISCOUNT,
	CAST(WEB_MISCELLANEOUS_CHARGES as FLOAT64) as MISCELLANEOUS_CHARGES,
	CAST(WEB_DISCOUNTS as FLOAT64) as WEB_DISCOUNTS,
	CAST(WEB_SHIPPING as FLOAT64) as WEB_SHIPPING,
	VENDORBILLBACK as VENDOR_BILLBACK,
	CAST(ITEMCONDCOST as FLOAT64) as UNIT_COND_COST,
	NULL as TAX_AMOUNT, --hardcoded null 
	(ITEM_SOLD_PRICE_BEFORE_DISCOUNTS / NULLIF(ITEM_QTY,0)) as UNIT_PRICE_AMOUNT,
	WEB_MISCELLANEOUS_CHARGES+WEB_SHIPPING as TRANSACTION_PRICE_MODIFICATION_AMOUNT ,		
	ITEMCOST as COST_OF_GOODS_SOLD_AMOUNT,
	(MARKETING_DISCOUNT+MERCHANDISING_DISCOUNT-WEB_DISCOUNTS+ITEM_SOLD_PRICE_BEFORE_DISCOUNTS+WEB_MISCELLANEOUS_CHARGES+WEB_SHIPPING+VENDORBILLBACK
	-ITEMCONDCOST-ITEMCOST-IFNULL(CREDITCARD_DISCOUNT,0)-IFNULL(EMPLOYEE_DISCOUNT,0)) as GROSS_MARGIN_AMOUNT,
	(MARKETING_DISCOUNT + MERCHANDISING_DISCOUNT - IFNULL(CREDITCARD_DISCOUNT,0) - IFNULL(EMPLOYEE_DISCOUNT,0) - WEB_DISCOUNTS) * -1 as EXTENDED_DISCOUNT_AMOUNT,
	NULL as SALES_DETAIL_KEY, -- will come from key 
	ITEM_NUMBER_SKU as SKU_NUMBER,
	TRANSACTION_NUMBER as TRANSACTION_NUMBER,
	REGISTER_ID as REGISTER_ID,
	CAST(SUBSTR(CASE WHEN ORDER_DATE = '' THEN NULL ELSE ORDER_DATE END,1,10) as DATE) as ORDER_DATE,
    NULL as ORDER_DATE_KEY, --will come from dimension
	CAST(CREDITCARD_DISCOUNT as FLOAT64) as CREDITCARD_DISCOUNT,
	CAST(EMPLOYEE_DISCOUNT as FLOAT64) as EMPLOYEE_DISCOUNT,
	NULL as MEMBER_FLAG, --still below question
	--case when $1 is not null and ($2 is not null and $2 <> '') and $1 <= $3 then 1 else 0 end /*aggregation on which columns ???? */
	--case when SIGN_UP_DATE (from individual dim) is not null and (card_number [from where?] is not null and card_number <> '') and sign_up_date <= BUSINESS_DAY_DATE(from date dim) then 1 else 0 end 
	WEB_ORDER_NUM as ORDER_NUM,
	(case when ITEM_NUMBER_SKU  = '9992002' then 1 else 0 end) AS GIFT_CARD_FLAG
FROM ulta_land.SALEDETAIL


--2. populate unchanged stage table
DELETE ulta_base_sales.SALE_RETURN_FACT_UNCHANGED WHERE TRUE

insert into ulta_base_sales.SALE_RETURN_FACT_UNCHANGED (TRANSACTION_ID,TRANSACTION_DATE_KEY,ITEM_KEY,SUBCLASS_KEY,STORE_KEY,STORE_ID,TRANSACTION_DATETIME,INDIVIDUAL_KEY,INDIVIDUAL_ID,POSTAL_ADDRESS_KEY,INBOUND_CHANNEL_KEY,SALES_QUANTITY,GROSS_SALES_AMOUNT,ITEM_PRICE_MODIFICATION_AMOUNT,NET_SALES_AMOUNT,SALES_HEADER_KEY,MARKETING_DISCOUNT,MERCHANDISING_DISCOUNT,MISCELLANEOUS_CHARGES,WEB_DISCOUNTS,WEB_SHIPPING,VENDOR_BILLBACK,UNIT_COND_COST,TAX_AMOUNT,UNIT_PRICE_AMOUNT,TRANSACTION_PRICE_MODIFICATION_AMOUNT,COST_OF_GOODS_SOLD_AMOUNT,GROSS_MARGIN_AMOUNT,EXTENDED_DISCOUNT_AMOUNT,SALES_DETAIL_KEY,SKU_NUMBER,TRANSACTION_NUMBER,REGISTER_ID,ORDER_DATE,ORDER_DATE_KEY,CREDITCARD_DISCOUNT,EMPLOYEE_DISCOUNT,MEMBER_FLAG,ORDER_NUM,GIFT_CARD_FLAG)
SELECT mart.TRANSACTION_ID,mart.TRANSACTION_DATE_KEY,mart.ITEM_KEY,mart.SUBCLASS_KEY,mart.STORE_KEY,mart.STORE_ID,mart.TRANSACTION_DATETIME,mart.INDIVIDUAL_KEY,mart.INDIVIDUAL_ID,mart.POSTAL_ADDRESS_KEY,mart.INBOUND_CHANNEL_KEY,mart.SALES_QUANTITY,mart.GROSS_SALES_AMOUNT,mart.ITEM_PRICE_MODIFICATION_AMOUNT,mart.NET_SALES_AMOUNT,mart.SALES_HEADER_KEY,mart.MARKETING_DISCOUNT,mart.MERCHANDISING_DISCOUNT,mart.MISCELLANEOUS_CHARGES,mart.WEB_DISCOUNTS,mart.WEB_SHIPPING,mart.VENDOR_BILLBACK,mart.UNIT_COND_COST,mart.TAX_AMOUNT,mart.UNIT_PRICE_AMOUNT,mart.TRANSACTION_PRICE_MODIFICATION_AMOUNT,mart.COST_OF_GOODS_SOLD_AMOUNT,mart.GROSS_MARGIN_AMOUNT,mart.EXTENDED_DISCOUNT_AMOUNT,mart.SALES_DETAIL_KEY,mart.SKU_NUMBER,mart.TRANSACTION_NUMBER,mart.REGISTER_ID,mart.ORDER_DATE,mart.ORDER_DATE_KEY,mart.CREDITCARD_DISCOUNT,mart.EMPLOYEE_DISCOUNT,mart.MEMBER_FLAG,mart.ORDER_NUM,mart.GIFT_CARD_FLAG
FROM ulta_mart_sales.SALE_RETURN_FACT mart LEFT OUTER JOIN ulta_base_sales.SALE_RETURN_FACT stage 
ON mart.TRANSACTION_ID = stage.TRANSACTION_ID and mart.ITEM_KEY =stage.ITEM_KEY 
--where stage.item_key is null
where stage.TRANSACTION_ID is null

--3. delete data from mart and take back up
bq cp ulta_mart_sales.SALE_RETURN_FACT ulta_mart_sales.SALE_RETURN_FAC	T_20180727
DELETE ulta_mart_sales.SALE_RETURN_FACT WHERE TRUE



--4. Populate mart table 

insert into ulta_mart_sales.SALE_RETURN_FACT (TRANSACTION_ID,TRANSACTION_DATE_KEY,ITEM_KEY,SUBCLASS_KEY,STORE_KEY,STORE_ID,TRANSACTION_DATETIME,INDIVIDUAL_KEY,INDIVIDUAL_ID,POSTAL_ADDRESS_KEY,INBOUND_CHANNEL_KEY,SALES_QUANTITY,GROSS_SALES_AMOUNT,ITEM_PRICE_MODIFICATION_AMOUNT,NET_SALES_AMOUNT,SALES_HEADER_KEY,MARKETING_DISCOUNT,MERCHANDISING_DISCOUNT,MISCELLANEOUS_CHARGES,WEB_DISCOUNTS,WEB_SHIPPING,VENDOR_BILLBACK,UNIT_COND_COST,TAX_AMOUNT,UNIT_PRICE_AMOUNT,TRANSACTION_PRICE_MODIFICATION_AMOUNT,COST_OF_GOODS_SOLD_AMOUNT,GROSS_MARGIN_AMOUNT,EXTENDED_DISCOUNT_AMOUNT,SALES_DETAIL_KEY,SKU_NUMBER,TRANSACTION_NUMBER,REGISTER_ID,ORDER_DATE,ORDER_DATE_KEY,CREDITCARD_DISCOUNT,EMPLOYEE_DISCOUNT,MEMBER_FLAG,ORDER_NUM,GIFT_CARD_FLAG)
select TRANSACTION_ID,TRANSACTION_DATE_KEY,ITEM_KEY,SUBCLASS_KEY,STORE_KEY,STORE_ID,TRANSACTION_DATETIME,INDIVIDUAL_KEY,INDIVIDUAL_ID,POSTAL_ADDRESS_KEY,INBOUND_CHANNEL_KEY,SALES_QUANTITY,GROSS_SALES_AMOUNT,ITEM_PRICE_MODIFICATION_AMOUNT,NET_SALES_AMOUNT,SALES_HEADER_KEY,MARKETING_DISCOUNT,MERCHANDISING_DISCOUNT,MISCELLANEOUS_CHARGES,WEB_DISCOUNTS,WEB_SHIPPING,VENDOR_BILLBACK,UNIT_COND_COST,TAX_AMOUNT,UNIT_PRICE_AMOUNT,TRANSACTION_PRICE_MODIFICATION_AMOUNT,COST_OF_GOODS_SOLD_AMOUNT,GROSS_MARGIN_AMOUNT,EXTENDED_DISCOUNT_AMOUNT,SALES_DETAIL_KEY,SKU_NUMBER,TRANSACTION_NUMBER,REGISTER_ID,ORDER_DATE,ORDER_DATE_KEY,CREDITCARD_DISCOUNT,EMPLOYEE_DISCOUNT,MEMBER_FLAG,ORDER_NUM,GIFT_CARD_FLAG
from ulta_base_sales.SALE_RETURN_FACT
UNION ALL
select TRANSACTION_ID,TRANSACTION_DATE_KEY,ITEM_KEY,SUBCLASS_KEY,STORE_KEY,STORE_ID,TRANSACTION_DATETIME,INDIVIDUAL_KEY,INDIVIDUAL_ID,POSTAL_ADDRESS_KEY,INBOUND_CHANNEL_KEY,SALES_QUANTITY,GROSS_SALES_AMOUNT,ITEM_PRICE_MODIFICATION_AMOUNT,NET_SALES_AMOUNT,SALES_HEADER_KEY,MARKETING_DISCOUNT,MERCHANDISING_DISCOUNT,MISCELLANEOUS_CHARGES,WEB_DISCOUNTS,WEB_SHIPPING,VENDOR_BILLBACK,UNIT_COND_COST,TAX_AMOUNT,UNIT_PRICE_AMOUNT,TRANSACTION_PRICE_MODIFICATION_AMOUNT,COST_OF_GOODS_SOLD_AMOUNT,GROSS_MARGIN_AMOUNT,EXTENDED_DISCOUNT_AMOUNT,SALES_DETAIL_KEY,SKU_NUMBER,TRANSACTION_NUMBER,REGISTER_ID,ORDER_DATE,ORDER_DATE_KEY,CREDITCARD_DISCOUNT,EMPLOYEE_DISCOUNT,MEMBER_FLAG,ORDER_NUM,GIFT_CARD_FLAG
from ulta_base_sales.SALE_RETURN_FACT_UNCHANGED

